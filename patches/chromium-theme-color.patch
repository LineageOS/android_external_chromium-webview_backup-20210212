From 9abd4caf4cc2b9718e888d33764081c8be813375 Mon Sep 17 00:00:00 2001
From: Danny Baumann <dannybaumann@web.de>
Date: Thu, 18 May 2017 11:04:40 +0200
Subject: [PATCH] Add support for getting updates for theme color changes.

---
 .../android/webview/chromium/WebViewChromium.java  |  9 ++++++
 .../chromium/WebViewContentsClientAdapter.java     | 33 ++++++++++++++++++++++
 .../chromium/android_webview/AwContentsClient.java |  2 ++
 .../AwContentsClientCallbackHelper.java            | 11 ++++++++
 .../android_webview/AwWebContentsObserver.java     | 16 +++++++++++
 .../android_webview/test/NullContentsClient.java   |  4 +++
 6 files changed, 75 insertions(+)

diff --git a/android_webview/glue/java/src/com/android/webview/chromium/WebViewChromium.java b/android_webview/glue/java/src/com/android/webview/chromium/WebViewChromium.java
index 39102d0f54f6..c02d04b3238e 100644
--- a/android_webview/glue/java/src/com/android/webview/chromium/WebViewChromium.java
+++ b/android_webview/glue/java/src/com/android/webview/chromium/WebViewChromium.java
@@ -11,6 +11,7 @@ import android.content.Intent;
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
+import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Picture;
 import android.graphics.Rect;
@@ -67,6 +68,7 @@ import org.chromium.base.metrics.CachedMetrics.TimesHistogramSample;
 import org.chromium.components.autofill.AutofillProvider;
 import org.chromium.content_public.browser.NavigationHistory;
 import org.chromium.content_public.browser.SmartClipProvider;
+import org.chromium.content_public.browser.WebContents;
 
 import java.io.BufferedWriter;
 import java.io.File;
@@ -991,6 +993,13 @@ class WebViewChromium implements WebViewProvider, WebViewProvider.ScrollDelegate
         return mAwContents.getMostRecentProgress();
     }
 
+    public int getThemeColor() {
+        WebContents webContents = mAwContents != null ? mAwContents.getWebContents() : null;
+        if (webContents == null) return Color.TRANSPARENT;
+        // No checkThread() because the value is cached java side (workaround for b/10533304).
+        return webContents.getThemeColor();
+    }
+
     @Override
     public int getContentHeight() {
         if (mAwContents == null) return 0;
diff --git a/android_webview/glue/java/src/com/android/webview/chromium/WebViewContentsClientAdapter.java b/android_webview/glue/java/src/com/android/webview/chromium/WebViewContentsClientAdapter.java
index 57c309994b58..a14900664091 100644
--- a/android_webview/glue/java/src/com/android/webview/chromium/WebViewContentsClientAdapter.java
+++ b/android_webview/glue/java/src/com/android/webview/chromium/WebViewContentsClientAdapter.java
@@ -60,6 +60,8 @@ import org.chromium.support_lib_boundary.util.Features;
 import org.chromium.support_lib_callback_glue.SupportLibWebViewContentsClientAdapter;
 
 import java.lang.ref.WeakReference;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
 import java.security.Principal;
 import java.security.PrivateKey;
 import java.security.cert.X509Certificate;
@@ -119,6 +121,9 @@ class WebViewContentsClientAdapter extends AwContentsClient {
     private WeakHashMap<AwPermissionRequest, WeakReference<PermissionRequestAdapter>>
             mOngoingPermissionRequests;
 
+    private static Method sWebChromeClientThemeColorMethod;
+    private static boolean sWebChromeClientThemeColorMethodInitialized = false;
+
     /**
      * Adapter constructor.
      *
@@ -142,6 +147,16 @@ class WebViewContentsClientAdapter extends AwContentsClient {
                         ScopedSysTraceEvent.scoped("WebViewContentsClientAdapter.constructor")) {
             mSupportLibClient = new SupportLibWebViewContentsClientAdapter();
 
+            if (!sWebChromeClientThemeColorMethodInitialized) {
+                try {
+                    sWebChromeClientThemeColorMethod = WebChromeClient.class.getMethod(
+                            "onThemeColorChanged", WebView.class, Integer.TYPE);
+                } catch (Exception e) {
+                    // ignored
+                }
+                sWebChromeClientThemeColorMethodInitialized = true;
+            }
+
             mUiThreadHandler = new Handler() {
                 @Override
                 public void handleMessage(Message msg) {
@@ -1215,6 +1230,24 @@ class WebViewContentsClientAdapter extends AwContentsClient {
         }
     }
 
+    /**
+     * @see AwContentsClient#onThemeColorChanged(int)
+     */
+    @Override
+    public void onThemeColorChanged(int color) {
+        try {
+            TraceEvent.begin("WebViewContentsClientAdapter.onThemeColorChanged");
+            if (mWebChromeClient != null && sWebChromeClientThemeColorMethod != null) {
+                if (TRACE) Log.d(TAG, "onThemeColorChanged=" + color);
+                sWebChromeClientThemeColorMethod.invoke(mWebChromeClient, mWebView, color);
+            }
+        } catch (IllegalAccessException | InvocationTargetException e) {
+            // ignored
+        } finally {
+            TraceEvent.end("WebViewContentsClientAdapter.onThemeColorChanged");
+        }
+    }
+
     private static class AwHttpAuthHandlerAdapter extends android.webkit.HttpAuthHandler {
         private AwHttpAuthHandler mAwHandler;
 
diff --git a/android_webview/java/src/org/chromium/android_webview/AwContentsClient.java b/android_webview/java/src/org/chromium/android_webview/AwContentsClient.java
index 3936de9119dc..0121de27b1bc 100644
--- a/android_webview/java/src/org/chromium/android_webview/AwContentsClient.java
+++ b/android_webview/java/src/org/chromium/android_webview/AwContentsClient.java
@@ -132,6 +132,8 @@ public abstract class AwContentsClient {
 
     public abstract void onProgressChanged(int progress);
 
+    public abstract void onThemeColorChanged(int color);
+
     public abstract AwWebResourceResponse shouldInterceptRequest(
             AwWebResourceRequest request);
 
diff --git a/android_webview/java/src/org/chromium/android_webview/AwContentsClientCallbackHelper.java b/android_webview/java/src/org/chromium/android_webview/AwContentsClientCallbackHelper.java
index 3fa731a47a10..632c4222746b 100644
--- a/android_webview/java/src/org/chromium/android_webview/AwContentsClientCallbackHelper.java
+++ b/android_webview/java/src/org/chromium/android_webview/AwContentsClientCallbackHelper.java
@@ -134,6 +134,9 @@ public class AwContentsClientCallbackHelper {
     private static final int MSG_ON_FORM_RESUBMISSION = 14;
     private static final int MSG_ON_SAFE_BROWSING_HIT = 15;
 
+    // Custom
+    private static final int MSG_ON_THEME_COLOR_CHANGED = 99;
+
     // Minimum period allowed between consecutive onNewPicture calls, to rate-limit the callbacks.
     private static final long ON_NEW_PICTURE_MIN_PERIOD_MILLIS = 500;
     // Timestamp of the most recent onNewPicture callback.
@@ -229,6 +232,10 @@ public class AwContentsClientCallbackHelper {
                     mContentsClient.onProgressChanged(msg.arg1);
                     break;
                 }
+                case MSG_ON_THEME_COLOR_CHANGED: {
+                    mContentsClient.onThemeColorChanged(msg.arg1);
+                    break;
+                }
                 case MSG_SYNTHESIZE_PAGE_LOADING: {
                     final String url = (String) msg.obj;
                     mContentsClient.onPageStarted(url);
@@ -341,6 +348,10 @@ public class AwContentsClientCallbackHelper {
         mHandler.sendMessage(mHandler.obtainMessage(MSG_SYNTHESIZE_PAGE_LOADING, url));
     }
 
+    public void postOnThemeColorChanged(int color) {
+        mHandler.sendMessage(mHandler.obtainMessage(MSG_ON_THEME_COLOR_CHANGED, color, 0));
+    }
+
     public void postDoUpdateVisitedHistory(String url, boolean isReload) {
         DoUpdateVisitedHistoryInfo info = new DoUpdateVisitedHistoryInfo(url, isReload);
         mHandler.sendMessage(mHandler.obtainMessage(MSG_DO_UPDATE_VISITED_HISTORY, info));
diff --git a/android_webview/java/src/org/chromium/android_webview/AwWebContentsObserver.java b/android_webview/java/src/org/chromium/android_webview/AwWebContentsObserver.java
index 56fdde8910f1..3339ac919cbf 100644
--- a/android_webview/java/src/org/chromium/android_webview/AwWebContentsObserver.java
+++ b/android_webview/java/src/org/chromium/android_webview/AwWebContentsObserver.java
@@ -128,11 +128,27 @@ public class AwWebContentsObserver extends WebContentsObserver {
             });
         }
 
+        if (client != null) {
+            AwContents awContents = mAwContents.get();
+            WebContents contents = awContents != null ? awContents.getWebContents() : null;
+            if (contents != null) {
+                client.getCallbackHelper().postOnThemeColorChanged(contents.getThemeColor());
+            }
+        }
+
         if (client != null && isFragmentNavigation) {
             client.getCallbackHelper().postOnPageFinished(url);
         }
     }
 
+    @Override
+    public void didChangeThemeColor(int color) {
+        AwContentsClient client = mAwContentsClient.get();
+        if (client != null) {
+            client.getCallbackHelper().postOnThemeColorChanged(color);
+        }
+    }
+
     public boolean didEverCommitNavigation() {
         return mCommittedNavigation;
     }
diff --git a/android_webview/test/shell/src/org/chromium/android_webview/test/NullContentsClient.java b/android_webview/test/shell/src/org/chromium/android_webview/test/NullContentsClient.java
index 2f112b21f436..4d5d42676ee5 100644
--- a/android_webview/test/shell/src/org/chromium/android_webview/test/NullContentsClient.java
+++ b/android_webview/test/shell/src/org/chromium/android_webview/test/NullContentsClient.java
@@ -72,6 +72,10 @@ public class NullContentsClient extends AwContentsClient {
     }
 
     @Override
+    public void onThemeColorChanged(int color) {
+    }
+
+    @Override
     public AwWebResourceResponse shouldInterceptRequest(
             AwContentsClient.AwWebResourceRequest request) {
         return null;
-- 
2.11.0

